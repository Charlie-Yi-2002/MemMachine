# This workflow will upload a Python Package to PyPI when a release is created
# For more information, see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

name: Publish Python Package to PyPI

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Patch version in pyproject.toml
        run: |
          VERSION="${{ github.event.release.tag_name }}"
          echo "Updating pyproject.toml version to $VERSION"
          sed -i -E "s/^version = \".*\"/version = \"$VERSION\"/" pyproject.toml

      - name: Install dependencies and uv
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade build
          pip install uv

      - name: Build the package with uv
        run: |
          uv build
          ls -lh dist/

      - name: Upload built distributions as artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-package-dist
          path: dist/*

  publish:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: pypi
      url: https://pypi.org/project/memmachine/
    permissions:
      id-token: write
    steps:
      - name: Download distribution artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-package-dist
          path: dist/

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
