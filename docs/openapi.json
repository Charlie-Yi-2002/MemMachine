{
  "openapi": "3.0.0",
  "info": {
    "title": "MemMachine API",
    "version": "1.0.0",
    "description": "API endpoints for interacting with the Profile Memory and Episodic Memory components of the MemMachine memory system."
  },
  "servers": [
    {
      "url": "https://localhost:8000"
    }
  ],
  "paths": {
    "/add_memory": {
      "post": {
        "summary": "add_memory",
        "description": "This endpoint adds a memory episode to the episodic memory and passes the message to the profile memory for ingestion.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewEpisode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Memory successfully added."
          },
          "400": {
            "description": "Invalid producer or produced_for ID."
          },
          "404": {
            "description": "No matching episodic memory instance found."
          }
        }
      }
    },
    "/search_memory": {
      "post": {
        "summary": "search_memory",
        "description": "Retrieves the relevant episodic memory instance and then performs concurrent searches in both the episodic memory and the profile memory. The results are combined into a single response object.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Search results returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResult"
                }
              }
            }
          },
          "404": {
            "description": "No matching episodic memory instance found."
          }
        }
      }
    },
    "/delete_data": {
      "post": {
        "summary": "delete_data",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteDataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Session data successfully deleted."
          },
          "404": {
            "description": "No matching episodic memory instance found."
          }
        }
      }
    },
    "/sessions": {
      "get": {
        "summary": "sessions",
        "description": "Retrieves a list of all available memory sessions.",
        "responses": {
          "200": {
            "description": "A list of all sessions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllSessionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/sessions/{user_id}": {
      "get": {
        "summary": "sessions/{user_id}",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of sessions for the specified user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllSessionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/sessions/{group_id}": {
      "get": {
        "summary": "sessions/{group_id}",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of sessions for the specified group.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllSessionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/sessions/{agent_id}": {
      "get": {
        "summary": "sessions/{agent_id}",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of sessions for the specified agent.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllSessionsResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SessionData": {
        "type": "object",
        "properties": {
          "group_id": {
            "type": "string",
            "nullable": true
          },
          "agent_id": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "user_id": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "session_id": {
            "type": "string"
          }
        }
      },
      "NewEpisode": {
        "type": "object",
        "properties": {
          "session": {
            "$ref": "#/components/schemas/SessionData"
          },
          "producer": {
            "type": "string"
          },
          "produced_for": {
            "type": "string"
          },
          "episode_content": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            ]
          },
          "episode_type": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": true,
            "nullable": true
          }
        }
      },
      "SearchQuery": {
        "type": "object",
        "properties": {
          "session": {
            "$ref": "#/components/schemas/SessionData"
          },
          "query": {
            "type": "string"
          },
          "filter": {
            "type": "object",
            "additionalProperties": true,
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      "SearchResult": {
        "type": "object",
        "properties": {
          "content": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "DeleteDataRequest": {
        "type": "object",
        "properties": {
          "session": {
            "$ref": "#/components/schemas/SessionData"
          }
        }
      },
      "MemorySession": {
        "type": "object",
        "properties": {
          "user_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "session_id": {
            "type": "string"
          },
          "group_id": {
            "type": "string",
            "nullable": true
          },
          "agent_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        }
      },
      "AllSessionsResponse": {
        "type": "object",
        "properties": {
          "sessions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemorySession"
            }
          }
        }
      }
    }
  }
}
